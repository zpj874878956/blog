(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{459:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("本文主要介绍 Filebeat 7.5 版本中 Log 相关的各个配置项的含义以及其应用场景。")]),t._v(" "),s("p",[t._v("一般情况下，我们使用 log input 的方式如下，只需要指定一系列 paths 即可。")]),t._v(" "),s("div",{staticClass:"language-yaml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("filebeat.inputs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" log\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /var/log/messages\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /var/log/"),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("*.log")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("但其实除了基本的 paths 配置外，log input 还有大概十几个配置项需要我们关注。")]),t._v(" "),s("p",[t._v("这些配置项或多或少都会影响到 Filebeat 的使用方式以及性能。虽然其默认值基本足够日常使用，但是还是需要深刻理解每个配置项背后的含义，这样才能够对其完全把控。")]),t._v(" "),s("p",[t._v("同时，在 filebeat 的日常线上运维中，也会涉及到这些配置参数的调节。")]),t._v(" "),s("h1",{attrs:{id:"log-input-配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#log-input-配置"}},[t._v("#")]),t._v(" log input 配置")]),t._v(" "),s("h2",{attrs:{id:"paths"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#paths"}},[t._v("#")]),t._v(" paths")]),t._v(" "),s("p",[t._v("我们可以指定一系列的 paths 作为信息输入源，在指定 path 的时候，注意以下规则：")]),t._v(" "),s("ol",[s("li",[t._v("指定的路径必须是文件，不能是目录。")]),t._v(" "),s("li",[t._v("支持 Glob 模式。")]),t._v(" "),s("li",[t._v("默认支持递归路径，如 "),s("code",[t._v("/**/")]),t._v(" 形式，Filebeat 将会展开 8 层嵌套目录。")])]),t._v(" "),s("h3",{attrs:{id:"glob-模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#glob-模式"}},[t._v("#")]),t._v(" Glob 模式")]),t._v(" "),s("p",[t._v("Glob 模式支持通配符匹配，目前支持的语法有：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("通配符")]),t._v(" "),s("th",[t._v("解释")]),t._v(" "),s("th",[t._v("示例")]),t._v(" "),s("th",[t._v("匹配")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("*")]),t._v(" "),s("td",[t._v("匹配任意数目的任意字符")]),t._v(" "),s("td",[s("code",[t._v("La*")])]),t._v(" "),s("td",[t._v("Law, Lawyer")])]),t._v(" "),s("tr",[s("td",[t._v("?")]),t._v(" "),s("td",[t._v("匹配任意的单字符")]),t._v(" "),s("td",[s("code",[t._v("?at")])]),t._v(" "),s("td",[t._v("Cat, cat, Bat or bat")])]),t._v(" "),s("tr",[s("td",[t._v("[abc]")]),t._v(" "),s("td",[t._v("匹配一个在中括号的字符")]),t._v(" "),s("td",[s("code",[t._v("[CB]at")])]),t._v(" "),s("td",[t._v("Cat or Bat")])]),t._v(" "),s("tr",[s("td",[t._v("[a-z]")]),t._v(" "),s("td",[t._v("匹配一个指定范围的字符")]),t._v(" "),s("td",[s("code",[t._v("Letter[0-9]")])]),t._v(" "),s("td",[t._v("Letter0, Letter1, Letter2 up to Letter9")])])])]),t._v(" "),s("h3",{attrs:{id:"递归的-glob-模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#递归的-glob-模式"}},[t._v("#")]),t._v(" 递归的 Glob 模式")]),t._v(" "),s("p",[t._v("此外，filebeat 对传统的 Glob 模式进行了扩展，支持用户指定 "),s("code",[t._v("/**/")]),t._v(" 模式的路径，filebeat 可以将其展开为 8 层的 Glob 路径。")]),t._v(" "),s("p",[t._v("例如，假如指定了 "),s("code",[t._v("/home/data/**/my*.log")]),t._v(", filebeat 将会把 "),s("code",[t._v("/**/")]),t._v(" 翻译成 8 层的子目录，如下：")]),t._v(" "),s("div",{staticClass:"language-none line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("/home/data/my*.log\n/home/data/*/my*.log\n/home/data/*/*/my*.log\n/home/data/*/*/*/my*.log\n/home/data/*/*/*/*/my*.log\n/home/data/*/*/*/*/*/my*.log\n/home/data/*/*/*/*/*/*/my*.log\n/home/data/*/*/*/*/*/*/*/my*.log\n/home/data/*/*/*/*/*/*/*/*/my*.log\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("加上不带子目录的 Glob 路径，一共会有 8 条 Glob 路径。这些路径都会作为 input 的输入源路径进行搜索。")]),t._v(" "),s("p",[t._v("但是在使用的时候需要注意：")]),t._v(" "),s("ol",[s("li",[t._v("filebeat 展开为 8 层子目录的规则，是直接 hardcode 在代码中的，无法通过配置修改匹配层数")]),t._v(" "),s("li",[t._v("只支持单纯的 "),s("code",[t._v("/**/")]),t._v(" 模式，对于 "),s("code",[t._v("/data**/")]),t._v(" 模式不支持")]),t._v(" "),s("li",[t._v("递归模式默认开启，可通过 "),s("code",[t._v("recursive_glob.enabled")]),t._v(" 配置项关闭")])]),t._v(" "),s("h2",{attrs:{id:"recursive-glob-enabled"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#recursive-glob-enabled"}},[t._v("#")]),t._v(" recursive_glob.enabled:")]),t._v(" "),s("p",[t._v("是否开启递归的 Glob 模式，默认为 true。")]),t._v(" "),s("p",[t._v("##encoding")]),t._v(" "),s("p",[t._v("指定日志编码，默认是 plain。即 ASCII 模式")]),t._v(" "),s("h2",{attrs:{id:"exclude-lines"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exclude-lines"}},[t._v("#")]),t._v(" exclude_lines")]),t._v(" "),s("p",[t._v("可指定多个正则表达式，来去除某些不需要上报的行。例如：")]),t._v(" "),s("div",{staticClass:"language-yaml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("filebeat.inputs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" log\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exclude_lines")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^DBG'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("该配置将会去除以 "),s("code",[t._v("DBG")]),t._v(" 开头的行。")]),t._v(" "),s("h2",{attrs:{id:"include-lines"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#include-lines"}},[t._v("#")]),t._v(" include_lines")]),t._v(" "),s("p",[t._v("可指定多项正则表达式，来仅上报匹配的行。例如：")]),t._v(" "),s("div",{staticClass:"language-yaml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("filebeat.inputs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" log\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("include_lines")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^ERR'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^WARN'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("该配置将会仅上报以 "),s("code",[t._v("ERR")]),t._v(" 和 "),s("code",[t._v("WARN")]),t._v(" 开头的行。")]),t._v(" "),s("p",[t._v("问题来了，如果同时指定了 exclude_lines 和 include_lines 会怎么处理？")]),t._v(" "),s("p",[t._v("对于这种情况，Filebeat 将会先校验 include_lines，再校验 exclude_lines，其代码实现如下：")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("h "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Harvester"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldExportLine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("line "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IncludeLines"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("harvester"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MatchAny")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IncludeLines"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" line"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// drop line")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ExcludeLines"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" harvester"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MatchAny")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ExcludeLines"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" line"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])]),s("h2",{attrs:{id:"exclude-files"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exclude-files"}},[t._v("#")]),t._v(" exclude_files")]),t._v(" "),s("p",[t._v("可指定多个正则表达式，匹配到的文件名将不会被处理。")]),t._v(" "),s("p",[t._v("例如:")]),t._v(" "),s("div",{staticClass:"language-yaml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exclude_files")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.gz$'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("这里需要注意的是，不管是 exclude_files，还是 exclude_lines、include_lines, 声明正则的时候，最好使用单引号引用正则表达式，不要用双引号。否则 yaml 会报转义问题")]),t._v(" "),s("h2",{attrs:{id:"harvester-buffer-size"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#harvester-buffer-size"}},[t._v("#")]),t._v(" harvester_buffer_size")]),t._v(" "),s("p",[t._v("读文件时的 buffer 大小，最终会应用在 golang 的 "),s("code",[t._v("File.Read")]),t._v(" 函数上面。")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("File"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("默认是 16384。即 16k。")]),t._v(" "),s("h2",{attrs:{id:"max-bytes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#max-bytes"}},[t._v("#")]),t._v(" max_bytes")]),t._v(" "),s("p",[t._v("表示一条 log 消息的最大 bytes 数目。超过这个大小，剩余就会被截断。"),s("br"),t._v("\n默认值为 10485760(即 10MB)。")]),t._v(" "),s("h2",{attrs:{id:"multiline"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#multiline"}},[t._v("#")]),t._v(" multiline")]),t._v(" "),s("p",[t._v("multiline 是为了解决需要多行聚合在一起发送的情况，例如 Java Stack Traces 信息等。"),s("br"),t._v("\n虽然 filebeat 默认不开启 multiline，但是官方的配置文件给了一个例子，可以支持 Java Stack Traces 或者是 C 语言式的换行连续符 "),s("code",[t._v("\\")]),t._v(", 可在 "),s("a",{attrs:{href:"https://www.elastic.co/guide/en/beats/filebeat/master/_examples_of_multiline_configuration.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Examples of multiline configuration"),s("OutboundLink")],1),t._v(" 中查看。")]),t._v(" "),s("p",[t._v("由于大部分场景不涉及 multiline，本文不再进行深入讨论。关于 multiline 配置的详细资料可查看官方文档："),s("br"),t._v("\nhttps://www.elastic.co/guide/en/beats/filebeat/7.5/multiline-examples.html")]),t._v(" "),s("h2",{attrs:{id:"ignore-older"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ignore-older"}},[t._v("#")]),t._v(" ignore_older")]),t._v(" "),s("p",[t._v("ignore_older 表示对于最近修改时间距离当前时间已经超过某个时长的文件，就暂时不进行处理。默认值为 0，表示禁用该功能。")]),t._v(" "),s("p",[t._v("注意：ignore_older 只是暂时不处理该文件，并不会在 Registrar 中改变该文件的状态。")]),t._v(" "),s("p",[t._v("其代码实现如下：")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isIgnoreOlder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("State"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ignore_older is disable")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IgnoreOlder "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    modTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Fileinfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ModTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Since")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("modTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IgnoreOlder "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br")])]),s("h2",{attrs:{id:"close-系列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#close-系列"}},[t._v("#")]),t._v(" close_* 系列")]),t._v(" "),s("p",[t._v("log input 中有一系列以 close_开头配置，这些配置决定了 Harvester 何时结束对文件的读取。")]),t._v(" "),s("ol",[s("li",[t._v("close_eof"),s("br"),t._v("\n如果读取到了 EOF(即文件末尾)，是否要结束读取。如果为 true，则读取到文件末尾就结束读取，否则 Harvester 将会继续工作。默认只为 false。")]),t._v(" "),s("li",[t._v("close_inactive"),s("br"),t._v("\n如果配置了 close_eof 为 false，则 Harvester 即使读取到了文件末尾也不会终止。close_inactive 决定了最长没有读到新消息的时长，默认为 5m(即五分钟)。如果超过了 close_inactive 规定的时间依然没有新消息，则 Harvester 退出。")]),t._v(" "),s("li",[t._v("close_timeout"),s("br"),t._v("\n决定了一个 Harvester 的最长工作时间，如果 Harvester 工作了一段时间后依然没有停止，则强行停止 Harvester。默认为 0，表示不强行停止 Harvester。")]),t._v(" "),s("li",[t._v("close_renamed"),s("br"),t._v("\n文件更名时是否退出，默认为 false。文件更名一般发生在日志轮替的场景下。")]),t._v(" "),s("li",[t._v("close_removed"),s("br"),t._v("\n表示当文件被删除时 Harvester 是否要继续。默认为 true，表示当文件被删除时，Harvester 即刻停止工作。")])]),t._v(" "),s("p",[t._v("不过即使 Harvester 关闭了也关系不大。因为根据 filebeat 会定时扫描文件，如果关闭后又有了新增内容，filebeat 依然是可以检查出来的。")]),t._v(" "),s("h2",{attrs:{id:"clean-系列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#clean-系列"}},[t._v("#")]),t._v(" clean_* 系列")]),t._v(" "),s("p",[t._v("clean_开头的一系列配置用来清理 Registrar 中的文件状态，同时也可以起到减小 Registrar 文件大小、防止 inode 复用等作用。")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("clean_inactive"),s("br"),t._v("\n表示一个时间段。用于移除已经一长段时间没有新产生内容的日志文件，默认为 0，表示禁用该功能。")])]),t._v(" "),s("li",[s("p",[t._v("clean_removed"),s("br"),t._v("\n在 Registrar 中移除那些已经不存在的文件。默认为 true，表示当文件不存在时，则从 Registrar 中移除。")])])]),t._v(" "),s("h2",{attrs:{id:"scan-frequency"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scan-frequency"}},[t._v("#")]),t._v(" scan_frequency")]),t._v(" "),s("p",[t._v("代表 input 的扫描频率，默认为 10s。"),s("br"),t._v("\ninput 会按照此频率，启动定时器定时扫描路径，以发现新文件和文件的改动情况。")]),t._v(" "),s("h2",{attrs:{id:"scan-sort-和-scan-order"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scan-sort-和-scan-order"}},[t._v("#")]),t._v(" scan.sort 和 scan.order")]),t._v(" "),s("p",[t._v("这两个配置项需要放在一起讲。"),s("br"),t._v(" "),s("code",[t._v("scan.sort")]),t._v(" 可取的值为: modtime 和 filename。默认值为空，不进行排序。"),s("br"),t._v(" "),s("code",[t._v("scan.order")]),t._v(" 可取的值为：asc 和 desc。默认值为 asc。"),s("code",[t._v("scan.order")]),t._v(" 仅在 "),s("code",[t._v("scan.sort")]),t._v(" 非空时生效。")]),t._v(" "),s("p",[t._v("需要注意的是：该功能目前为实验功能，可能会在以后版本移除。")]),t._v(" "),s("h2",{attrs:{id:"tail-files"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tail-files"}},[t._v("#")]),t._v(" tail_files")]),t._v(" "),s("p",[t._v("默认情况下，Harvester 处理文件时，会文件头开始读取文件。开启此功能后，filebeat 将直接会把文件的 offset 置到末尾，从文件末尾监听消息。默认值是 false。")]),t._v(" "),s("p",[t._v("注意： 开启了 tail_files, 则所有文件中的当前内容将不会被上报，只有新产生消息时才会上报。")]),t._v(" "),s("p",[t._v("在真实的实现中，tail_files 被当做 "),s("code",[t._v("ignore_older=1ns")]),t._v(" 处理。因此，在启动的时候，只要是新文件，里面的内容都会被忽略，直接把 offset 置为文件末尾。")]),t._v(" "),s("p",[t._v("所以使用该配置项时千万要谨慎！")]),t._v(" "),s("h2",{attrs:{id:"harvester-limit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#harvester-limit"}},[t._v("#")]),t._v(" harvester_limit")]),t._v(" "),s("p",[t._v("harvester_limit 决定了一个 input 最多同时有多少个 harvester 启动。默认为 0，代表不对 harvester 个数进行限制。"),s("br"),t._v("\n在使用时要注意两点：")]),t._v(" "),s("ol",[s("li",[t._v("如果一个文件对应的 harvester 在本轮扫描时没能启动，那会在下次扫描时，有其他文件的 harvester 完全退出时，该文件的 harvester 才能启动。")]),t._v(" "),s("li",[t._v("harvester_limit 仅对针对配置的 input 进行了限制，多个 input 之间的 harvester_limit 互不影响。")])]),t._v(" "),s("h2",{attrs:{id:"symlinks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#symlinks"}},[t._v("#")]),t._v(" symlinks")]),t._v(" "),s("p",[t._v("代表是否要对符号链接进行处理，默认值为 false，代表不处理。")]),t._v(" "),s("h2",{attrs:{id:"backoff-相关配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#backoff-相关配置"}},[t._v("#")]),t._v(" backoff 相关配置")]),t._v(" "),s("p",[t._v("我们上文讲到 "),s("code",[t._v("close_eof")]),t._v(" 选项，当读取到 eof 时，且 close_eof 为 false，则 Harvester 还会一直尝试读取文件。")]),t._v(" "),s("p",[t._v("在这种情况下，Harvester 继续读取之前，其实 filebeat 还会等待一段时间。等待的时长就是由 "),s("code",[t._v("backoff")]),t._v("、"),s("code",[t._v("backoff_factor")]),t._v(" 和 "),s("code",[t._v("max_backoff")]),t._v(" 三个配置项共同决定。")]),t._v(" "),s("p",[t._v("对应的代码实现为：")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wait")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Wait before trying to read file again. File reached EOF.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("done"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v("time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("After")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("backoff"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Increment backoff up to maxBackoff")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("backoff "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MaxBackoff "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("backoff "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("backoff "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Duration")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BackoffFactor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("backoff "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MaxBackoff "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("backoff "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MaxBackoff\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("p",[t._v("其中，"),s("code",[t._v("backoff")]),t._v(" 默认值为 1s, "),s("code",[t._v("backoff_factor")]),t._v(" 默认值为 2，"),s("code",[t._v("max_backoff")]),t._v(" 默认值为 10s。")]),t._v(" "),s("p",[t._v("该配置项意味着，如果读到 EOF，则 filebeat 将会等待一段时间再去读文件。"),s("br"),t._v("\n等待时间开始为 1s，如果一直是 EOF，则会逐渐增大等待时间，每次的等待时间是前一次的两倍，且一次最长等待 10s。")]),t._v(" "),s("p",[t._v("再结合 "),s("code",[t._v("close_inactive")]),t._v(" 选项，如果等待时间超过了默认值 5 分钟，则 Harvester 结束。")]),t._v(" "),s("p",[t._v("此外，如果等待的时候文件又追加了新的数据，则 backoff 将会重新置为初始值。")]),t._v(" "),s("h1",{attrs:{id:"全局配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局配置"}},[t._v("#")]),t._v(" 全局配置")]),t._v(" "),s("p",[t._v("除了 log input 相关的属性外，有一些全局属性也需要我们注意。")]),t._v(" "),s("h2",{attrs:{id:"queue-相关配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#queue-相关配置"}},[t._v("#")]),t._v(" queue 相关配置")]),t._v(" "),s("p",[t._v("filebeat 会将 event 暂时存放在 queue 里面。filebeat 的 queue 目前有 mem 和 spool 两种实现，默认是 mem。"),s("br"),t._v("\n本文只介绍下 mem 的相关配置项。")]),t._v(" "),s("div",{staticClass:"language-yaml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("queue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("events")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("flush.min_events")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2048")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("flush.timeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1s\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("events 代表 queue 最多能够承载的 event 的个数。如果个数达到最大值，则 input 将不能再向 queue 中插入数据，直至 output 将数据消费。")]),t._v(" "),s("p",[s("code",[t._v("flush.min_events")]),t._v(" 代表只有 queue 里面的数据到达了指定个数，才将数据发送给 output。设为 0 代表直接发送给 output，不进行等待。默认值是2048。")]),t._v(" "),s("p",[s("code",[t._v("flush.timeout")]),t._v(" 代表定时刷新 event 到 output 中，即使其个数没有达到 "),s("code",[t._v("flush.min_events")]),t._v("。该配置项只会在 "),s("code",[t._v("flush.min_events")]),t._v(" 大于 0 时生效。")]),t._v(" "),s("h2",{attrs:{id:"registry-相关配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#registry-相关配置"}},[t._v("#")]),t._v(" registry 相关配置")]),t._v(" "),s("ol",[s("li",[t._v("filebeat.registry.path"),s("br"),t._v("\n定制 registry 文件的目录，默认值是 "),s("code",[t._v("registry")]),t._v("。")])]),t._v(" "),s("p",[t._v("注意，这里指定的只是 registry 的目录，最终的 registry 文件的路径会是这样:")]),t._v(" "),s("div",{staticClass:"language-none line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("${filebeat.registry.path}/filebeat/data.json\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ol",{attrs:{start:"2"}},[s("li",[s("p",[t._v("filebeat.registry.flush"),s("br"),t._v("\n将 registry 文件内容定时刷新到磁盘中。默认为 0s，代表每次更新时直接写文件。"),s("br"),t._v("\n配置了该选项可以提高些 filebeat 的性能，避免频繁写磁盘，但是也增加了一定数据丢失的风险。")])]),t._v(" "),s("li",[s("p",[t._v("filebeat.registry.file_permissions"),s("br"),t._v("\n默认为 0600，即只有拥有者可以读写该用户, 其他用户不可以修改。")])])]),t._v(" "),s("h2",{attrs:{id:"日志相关配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#日志相关配置"}},[t._v("#")]),t._v(" 日志相关配置")]),t._v(" "),s("p",[t._v("filebeat 可以对输出日志的进行相关配置，filebeat 提供了如下日志相关的配置:")]),t._v(" "),s("div",{staticClass:"language-yaml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("logging.level")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" info "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 日志输出的最小级别")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("logging.selectors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 过滤器，用户可在 logp.NewLogger 时指定")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("logging.to_stderr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将日志输出到 stderr")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("logging.to_syslog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将日志输出到 syslog (主要用于 unix)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("logging.to_eventlog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将日志输出到 windows 的 event log")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("logging.to_files")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将日志输出到文件中")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("logging.files")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("filebeat_bin_path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/logs/ "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 日志目录")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" filebeat  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 文件名 filebeat filebeat.1 filebeat.2")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rotateonstartup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在 filebeat 启动时进行日志轮替")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rotateeverybytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10485760")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# = 10MB 日志轮替的默认值")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("keepfiles")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 日志保留个数")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("permissions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0600")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 日志权限")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("interval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 日志轮替")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("logging.metrics.enabled")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("logging.metrics.period")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 30s\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("logging.json")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br")])]),s("p",[t._v("filebeat 可以选择将日志输出到许多地方，在线上运营时我们常常会将日志输出到文件, 所以接下来讲下文件相关的配置。")]),t._v(" "),s("p",[t._v("我们可以配置日志文件的所在目录以及文件名，分别对应 "),s("code",[t._v("logging.files.path")]),t._v(" 和 "),s("code",[t._v("logging.files.name")]),t._v("。"),s("br"),t._v("\n默认情况下，日志的输出目录是在 filebeat 的 bin 文件所在目录下的 logs 文件。")]),t._v(" "),s("p",[t._v("filebeat 会进行日志轮替，一般情况下，常见的日志轮替规则有按大小和按时间，filebeat 两种规则均支持。"),s("br"),t._v("\n其中:")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("rotateeverybytes")]),t._v(" 决定了日志文件的最大值，如果日志文件超过了该值，将发生日志轮替，默认值为 10MB。")]),t._v(" "),s("li",[s("code",[t._v("rotateonstartup")]),t._v(" 是说明是否在每次启动时都进行一次日志轮替，这样的话，每次启动的日志都会从一个新文件开始。默认为 true")])]),t._v(" "),s("p",[t._v("按文件大小进行轮替后，日志文件名将会变成 filebeat、filebeat.1、filebeat.2 这种格式，后缀越大文件越旧。")]),t._v(" "),s("p",[t._v("filebeat 也支持按时间进行轮替，可以配置 "),s("code",[t._v("logging.files")]),t._v(" 下的 interval 属性，支持按照秒、分钟、小时、周、月、年进行轮替，对应值为 "),s("code",[t._v("1s")]),t._v(","),s("code",[t._v("1m")]),t._v(", "),s("code",[t._v("1h")]),t._v(", "),s("code",[t._v("24h")]),t._v(", "),s("code",[t._v("7*24h")]),t._v(", "),s("code",[t._v("30*24h")]),t._v(", 和 "),s("code",[t._v("365*24h")]),t._v("。当然，最小值是 1s。")]),t._v(" "),s("p",[t._v("按照时间进行轮替时，时间将会以连字符进行分割, 例如：按照 1 小时进行轮替的话，文件格式为："),s("code",[t._v("filebeat-2019-11-28-15")]),t._v("。filebeat 目前还不支持日期格式的自定义。")]),t._v(" "),s("p",[t._v("同时，我们也可以指定日志的保留策略，目前只能通过设置 "),s("code",[t._v("keepfiles")]),t._v(" 来决定保留日志的个数。")]),t._v(" "),s("p",[t._v("在日志里面还有 "),s("code",[t._v("logging.metrics")]),t._v(" 相关配置，filebeat 会定时输出一些当前的运行指标，例如输出下当前 ack 成功的数目、当前的内存占用情况等：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("logging.metrics.enabled")]),t._v(" 决定是否开启指标搜集")]),t._v(" "),s("li",[s("code",[t._v("logging.metrics.period")]),t._v(" 决定指标输出的间隔")])]),t._v(" "),s("h2",{attrs:{id:"使用环境变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用环境变量"}},[t._v("#")]),t._v(" 使用环境变量")]),t._v(" "),s("p",[t._v("我们可以在使用配置文件中直接使用环境变量，使用方式如下:")]),t._v(" "),s("div",{staticClass:"language-yaml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fields")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("ENV_NAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("我们可以直接用 "),s("code",[t._v("${ENV_NAME}")]),t._v(" 来引用系统的环境变量。"),s("br"),t._v("\n除了直接引用外，filebeat 还提供了两个表达式配合使用:")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("${VAR:default_value}")]),t._v("。如果没有环境变量 "),s("code",[t._v("VAR")]),t._v(", 则使用默认值 default_value")]),t._v(" "),s("li",[s("code",[t._v("${VAR:?error_text}")]),t._v("。如果没有环境变量 "),s("code",[t._v("VAR")]),t._v("，则显示错误提示 "),s("code",[t._v("error_text")])])]),t._v(" "),s("p",[t._v("filebeat 也支持在启动时指定命令行参数来提供环境变量: "),s("code",[t._v("-E name=${NAME}")])]),t._v(" "),s("p",[t._v("#相关阅读")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.cyhone.com/articles/analysis-of-filebeat/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Elastic-Filebeat 实现剖析"),s("OutboundLink")],1)])]),t._v(" "),s("h1",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("ul",[s("li",[t._v("https://www.elastic.co/guide/en/beats/filebeat/7.5/filebeat-input-log.html")]),t._v(" "),s("li",[t._v("https://github.com/elastic/beats/blob/7.5/filebeat/filebeat.reference.yml")]),t._v(" "),s("li",[t._v("https://en.wikipedia.org/wiki/Glob_(programming)")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/beats/filebeat/current/using-environ-vars.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Use environment variables in the configuration | Filebeat Reference [8.6] | Elastic"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("原文链接： https://www.cyhone.com/articles/usage-of-filebeat-log-config/")])])}),[],!1,null,null,null);s.default=n.exports}}]);