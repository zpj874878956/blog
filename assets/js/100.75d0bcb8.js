(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{453:function(e,s,n){"use strict";n.r(s);var a=n(0),t=Object(a.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h3",{attrs:{id:"一、使用kubectl查询、创建、编辑和删除资源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、使用kubectl查询、创建、编辑和删除资源"}},[e._v("#")]),e._v(" 一、使用kubectl查询、创建、编辑和删除资源")]),e._v(" "),s("p",[e._v("对于刚开始使用命令行工具的开发者，最保险的方法是提出问题（读取操作），而不是发出命令（写入操作），所以从使用 "),s("code",[e._v("get")]),e._v(" 命令开始是个不错的选择。")]),e._v(" "),s("ul",[s("li",[s("strong",[e._v("Kubectl get")])])]),e._v(" "),s("p",[e._v("使用 get 命令可以获取当前集群中可用的资源列表，包括：")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("Namespace")])]),e._v(" "),s("li",[s("p",[e._v("Pod")])]),e._v(" "),s("li",[s("p",[e._v("Node")])]),e._v(" "),s("li",[s("p",[e._v("Deployment")])]),e._v(" "),s("li",[s("p",[e._v("Service")])]),e._v(" "),s("li",[s("p",[e._v("ReplicaSet")])])]),e._v(" "),s("p",[e._v("每个 get 命令都能提供集群中可用资源的详细信息。例如 get nodes 命令就提供了 Kubernetes 的状态和版本。")]),e._v(" "),s("p",[e._v("这些命令大多数还具有简写版本。例如，要获取命名空间，可以使用 kubectl get ns 命令:")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ kubectl get ns\nNAME              STATUS   AGE\ncharts            Active   8d\ndefault           Active   9d\nkube-node-lease   Active   9d\nkube-public       Active   9d\nkube-system       Active   9d\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br")])]),s("ul",[s("li",[s("strong",[e._v("Kubectl create")])])]),e._v(" "),s("p",[e._v("可以查询资源后，下一步是创建资源。我们可以用 kubectl 在集群中创建任何类型的资源，包括：")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("Service")])]),e._v(" "),s("li",[s("p",[e._v("Cronjob")])]),e._v(" "),s("li",[s("p",[e._v("Deployment")])]),e._v(" "),s("li",[s("p",[e._v("Job")])]),e._v(" "),s("li",[s("p",[e._v("Namespace（ns）")])])]),e._v(" "),s("p",[e._v("其中，一些资源的创建需要设置配置文件、命名空间以及资源名称。例如，创建命名空间就需要一个额外参数来指定命名空间。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ kubectl create ns hello-there\nnamespace/hello-there created\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("Linux 里可以使用 cron 创建定时运行的任务。同样的，这里我们使用 cronjob 每五秒钟返回一次“hello”。")]),e._v(" "),s("p",[s("code",[e._v('$ kubectl create cronjob my-cron --image=busybox --schedule="*/5 * * * *" -- echo hello``cronjob.batch/my-namespaced-cron created')])]),e._v(" "),s("p",[e._v("我们也可以使用 cronjob 的简写版本 cj。")]),e._v(" "),s("p",[s("code",[e._v('$ kubectl create cj my-existing-cron --image=busybox --schedule="*/15 * * * *" -- echo hello``cronjob.batch/my-existing-cron created')])]),e._v(" "),s("ul",[s("li",[s("strong",[e._v("Kubectl edit")])])]),e._v(" "),s("p",[e._v("当我们创建好资源后，如果需要修改，该怎么办？这时候就需要 kubectl edit 命令了。")]),e._v(" "),s("p",[e._v("我们可以用这个命令编辑集群中的任何资源。它会打开默认文本编辑器。如果我们要编辑现有的 cron job，则可以执行：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ kubectl edit cronjob/my-existing-cron\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("我们要编辑的配置如下：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('# Please edit the object below. Lines beginning with a \'#\' will be ignored,\n# and an empty file will abort the edit. If an error occurs while saving this file will be\n# reopened with the relevant failures.\n#\napiVersion: batch/v1beta1\nkind: CronJob\nmetadata:\n  creationTimestamp: "2020-04-19T16:06:06Z"\n  managedFields:\n  - apiVersion: batch/v1beta1\n    fieldsType: FieldsV1\n    fieldsV1:\n      f:spec:\n        f:concurrencyPolicy: {}\n        f:failedJobsHistoryLimit: {}\n        f:jobTemplate:\n          f:metadata:\n            f:name: {}\n          f:spec:\n            f:template:\n              f:spec:\n                f:containers:\n                  k:{"name":"my-new-cron"}:\n                    .: {}\n                    f:command: {}\n                    f:image: {}\n                    f:imagePullPolicy: {}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br")])]),s("p",[e._v("原本调度间隔设置为 15 秒：")]),e._v(" "),s("p",[e._v("我们将其更改为每 25 秒：")]),e._v(" "),s("p",[e._v("编写完成后，可以看到修改已生效。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ kubectl edit cronjob/my-existing-cron\ncronjob.batch/my-existing-cron edited\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("另外，我们可以通过 KUBE_EDITOR 命令来使用其他编辑器。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('$ KUBE_EDITOR="nano" kubectl edit cronjob/my-existing-cron\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("ul",[s("li",[s("strong",[e._v("Kubectl delete")])])]),e._v(" "),s("p",[e._v("学会了以上命令后，下面我们将进行删除操作。刚刚编辑的 cronjob 是两个 cronjobs 之一，现在我们删除整个资源")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('$ kubectl delete cronjob my-existing-cron\ncronjob.batch "my-existing-cron" deleted\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("需要注意的是，如果不知道资源是否有关联信息，最好不要删除。因为删除后无法恢复，只能重新创建。")]),e._v(" "),s("ul",[s("li",[s("strong",[e._v("Kubectl apply")])])]),e._v(" "),s("p",[e._v("上文提到，某些命令需要配置文件，而 apply 命令可以在集群内调整配置文件应用于资源。虽然也可以通过命令行 standard in (STNIN) 来完成，但 apply 命令更好一些，因为它可以让你知道如何使用集群，以及要应用哪种配置文件。作为示例，下文会将 Helm 的基于角色的访问控制（RBAC）配置用于服务帐户。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ kubectl apply -f commands.yaml\nserviceaccount/tiller created\nclusterrolebinding.rbac.authorization.k8s.io/tiller created\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[e._v("我们可以应用几乎任何配置，但是一定要明确所要应用的配置，否则可能会引发意料之外的后果。")]),e._v(" "),s("h3",{attrs:{id:"二、使用kubectl对kubernetes进行故障排除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、使用kubectl对kubernetes进行故障排除"}},[e._v("#")]),e._v(" 二、使用kubectl对kubernetes进行故障排除")]),e._v(" "),s("ul",[s("li",[s("strong",[e._v("Kubectl describe")])])]),e._v(" "),s("p",[e._v("describe 命令可以查看资源的详细信息。比较常见的用法是查看一个 Pod 或节点信息，以检查是否有异常、资源是否耗尽。")]),e._v(" "),s("p",[e._v("该命令可以查看的资源包括：")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("Nodes")])]),e._v(" "),s("li",[s("p",[e._v("Pods")])]),e._v(" "),s("li",[s("p",[e._v("Services")])]),e._v(" "),s("li",[s("p",[e._v("Deployments")])]),e._v(" "),s("li",[s("p",[e._v("Replica sets")])]),e._v(" "),s("li",[s("p",[e._v("Cronjobs")])])]),e._v(" "),s("p",[e._v("举个例子，我们用 describe 命令查看上文集群中 cronjob 的详细信息。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ kubectl describe cronjob my-cron\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("以下是部分信息：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Name:                         my-cron\nNamespace:                    default\nLabels:                       <none>\nAnnotations:                  <none>\nSchedule:                     */5 * * * *\nConcurrency Policy:           Allow\nSuspend:                      False\nSuccessful Job History Limit: 3\nFailed Job History Limit:     1\nStarting Deadline Seconds:    <unset>\nSelector:                     <unset>\nParallelism:                  <unset>\nCompletions:                  <unset>\nPod Template:\n  Labels: <none>\n  Containers:\n   my-cron:\n    Image:     busybox\n    Port:      <none>\n    Host Port: <none>\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br")])]),s("ul",[s("li",[s("strong",[e._v("Kubectl logs")])])]),e._v(" "),s("p",[e._v("虽然 describe 命令可以让你知道 Pod 内部应用程序发生的事，但 logs 命令可以提供 Kubernetes 中 Pod 的更多详细信息。了解这种区别可以帮助开发者更好地对应用程序内部以及 Kubernetes 内部发生的问题，并进行故障排除，这二者往往并不相同。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ kubectl logs cherry-chart-88d49478c-dmcfv -n charts\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("以上命令的部分输出结果如下：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('172.17.0.1 - - [19/Apr/2020:16:01:15 +0000] "GET / HTTP/1.1" 200 612 "-" "kube-probe/1.18" "-"\n172.17.0.1 - - [19/Apr/2020:16:01:20 +0000] "GET / HTTP/1.1" 200 612 "-" "kube-probe/1.18" "-"\n172.17.0.1 - - [19/Apr/2020:16:01:25 +0000] "GET / HTTP/1.1" 200 612 "-" "kube-probe/1.18" "-"\n172.17.0.1 - - [19/Apr/2020:16:01:30 +0000] "GET / HTTP/1.1" 200 612 "-" "kube-probe/1.18" "-"\n172.17.0.1 - - [19/Apr/2020:16:01:35 +0000] "GET / HTTP/1.1" 200 612 "-" "kube-probe/1.18" "-"\n172.17.0.1 - - [19/Apr/2020:16:01:40 +0000] "GET / HTTP/1.1" 200 612 "-" "kube-probe/1.18" "-"\n172.17.0.1 - - [19/Apr/2020:16:01:45 +0000] "GET / HTTP/1.1" 200 612 "-" "kube-probe/1.18" "-"\n172.17.0.1 - - [19/Apr/2020:16:01:50 +0000] "GET / HTTP/1.1" 200 612 "-" "kube-probe/1.18" "-"\n172.17.0.1 - - [19/Apr/2020:16:01:55 +0000] "GET / HTTP/1.1" 200 612 "-" "kube-probe/1.18" "-"\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br")])]),s("p",[e._v("grep 命令可以过滤无关信息或查看特定事件。例如，下面的 kube-probe 可能是无关信息，我们用 grep 命令对其进行过滤。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('$ kubectl logs cherry-chart-88d49478c-dmcfv -n charts | grep -vie kube-probe\n127.0.0.1 - - [10/Apr /2020:23:01:55 +0000] "GET / HTTP/1.1" 200 612 "-" "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:75.0) Gecko/20100101 Firefox/75.0" “-”\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("在有些部署中，存在一个 Pod 有多个容器的情况，因此我们可以在 logs 命令中使用 "),s("code",[e._v("-c <容器名称>")]),e._v("，以查找指定容器的日志。")]),e._v(" "),s("ul",[s("li",[s("strong",[e._v("Kubectl exec")])])]),e._v(" "),s("p",[e._v("与 docker exec 命令相似，exec 命令也可以在容器中直接对应用程序进行故障排除。尤其当 Pod 的日志无法定位问题时， 它会特别好用。另外要注意的是，使用 exec 命令时，必须要以 Pod 内使用的 shell 作为命令的最后一个参数。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ kubectl exec -it cherry-chart-88d49478c-dmcfv -n charts -- /bin/bash\nroot@cherry-chart-88d49478c-dmcfv:/#\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("ul",[s("li",[s("strong",[e._v("Kubectl cp")])])]),e._v(" "),s("p",[e._v("Kubectl cp 命令与 Linux cp 命令类似，用于容器之间复制文件和目录。另外，该命令还能在自动化失败等紧急情况下进行恢复备份。")]),e._v(" "),s("p",[e._v("以下是将本地文件拷贝到容器的示例。命令格式为：kubectl cp namespace/podname:/path/tofile。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ kubectl cp commands_copy.txt charts/cherry-chart-88d49478c-dmcfv:commands.txt\n$ kubectl exec -it cherry-chart-88d49478c-dmcfv -n charts -- /bin/bash\nroot@cherry-chart-88d49478c-dmcfv:/# ls\nbin  boot  commands.txt  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("p",[e._v("下面是将容器内的文件拷贝到本地计算机上的示例。命令格式为：")]),e._v(" "),s("p",[e._v("kubectl cp namespace/podname:/path/tofile。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ kubectl cp charts/cherry-chart-88d49478c-dmcfv:commands.txt commands_copy.txt\n$ ls\ncommands_copy.txt\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("h3",{attrs:{id:"kubectl客户端快捷使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kubectl客户端快捷使用"}},[e._v("#")]),e._v(" kubectl客户端快捷使用")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("##kubectl")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-L")]),e._v(" https://dl.k8s.io/release/v1.24.2/bin/linux/amd64/kubectl "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-o")]),e._v(" /usr/local/bin/kubectl\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("chmod")]),e._v(" +x /usr/local/bin/kubectl\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("##复制master节点.kube下的config过来")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-p")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$HOME")]),e._v("/.kube\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("wget")]),e._v(" xxxxxxx:8888/config\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("chown")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("id")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-u")]),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("id")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-g")]),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$HOME")]),e._v("/.kube/config\n\nkubectl get "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("node")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br")])]),s("hr"),e._v(" "),s("p",[s("a",{attrs:{href:"https://mp.weixin.qq.com/s/TPYYS3MpT6YBeYKmlgqGLA",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考链接"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=t.exports}}]);