(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{463:function(s,a,t){"use strict";t.r(a);var n=t(0),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),a("p",[s._v("通过本篇内容，你可以学到如何解决 Logstash 的常见问题、理解 Logstash 的运行机制、集群环境下如何部署 ELK Stack。")]),s._v(" "),a("p",[s._v("在使用 Logstash 遇到了很多坑，本篇也会讲解解决方案。")]),s._v(" "),a("ul",[a("li",[s._v("日志记录的格式复杂，正则表达式非常磨人。")]),s._v(" "),a("li",[s._v("服务日志有多种格式，如何匹配。")]),s._v(" "),a("li",[s._v("错误日志打印了堆栈信息，包含很多行，如何合并。")]),s._v(" "),a("li",[s._v("日志记录行数过多(100多行)，被拆分到了其他的日志记录中。")]),s._v(" "),a("li",[s._v("输出到 ES 的日志包含很多无意义字段。")]),s._v(" "),a("li",[s._v("输出到 ES 的日志时间和本来的日志时间相差 8 小时。")]),s._v(" "),a("li",[s._v("如何优化 Logstash 的性能。")]),s._v(" "),a("li",[s._v("Logstash 单点故障如何处理。")])]),s._v(" "),a("h2",{attrs:{id:"一、部署架构图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、部署架构图"}},[s._v("#")]),s._v(" 一、部署架构图")]),s._v(" "),a("p",[s._v("最近悟空正在我们的测试环境部署这一套 ELK，发现还是有很多内容需要再单独拎几篇出来详细讲讲的，这次我会带着大家一起来看下 ELK 中的 Logstash 组件的落地玩法和踩坑之路。")]),s._v(" "),a("p",[s._v("测试环境目前有 12 台机器，其中 有 4 台给后端微服务、Filebeat、Logstash 使用，3 台给 ES 集群和 Kibana 使用。")]),s._v(" "),a("p",[s._v("部署拓扑图如下：")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://pic.zzppjj.top/LightPicture/2023/04/9dd5926993739714.png",alt:""}})]),s._v(" "),a("h3",{attrs:{id:"部署说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署说明"}},[s._v("#")]),s._v(" 部署说明：")]),s._v(" "),a("ul",[a("li",[s._v("4 台服务器给业务微服务服务使用，微服务的日志会存放本机上。")]),s._v(" "),a("li",[s._v("4 台服务器都安装 Filebeat 日志采集器，采集本机的微服务日志。")]),s._v(" "),a("li",[s._v("其中一台服务器安装 Logstash ，Filebeat 发送日志给 Logstash。Logstash 将日志输出到 Elasticsearch集群中。")]),s._v(" "),a("li",[s._v("3 台服务器都安装有 Elasticsearch 服务，组成 ES 集群。其中一台安装 Kibana 服务，查询 ES 集群中的日志信息。")])]),s._v(" "),a("h2",{attrs:{id:"二、logstash-用来做什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、logstash-用来做什么"}},[s._v("#")]),s._v(" 二、Logstash 用来做什么?")]),s._v(" "),a("p",[s._v("你是否还在苦恼每次生产环境出现问题都需要远程到服务器查看日志文件?")]),s._v(" "),a("p",[s._v("你是否还在为了没有统一的日志搜索入口而烦心?")]),s._v(" "),a("p",[s._v("你是否还在为从几十万条日志中搜索关键信息而苦恼?")]),s._v(" "),a("p",[s._v("没错，Logstash 它来啦，带着所有的日志记录来啦。")]),s._v(" "),a("p",[s._v("Logstash 它是帮助我们收集、解析和转换日志的。作为 ELK 中的一员，发挥着很大的作用。")]),s._v(" "),a("p",[s._v("当然 Logstash 不仅仅用在收集日志方面，还可以收集其他内容，我们最熟悉的还是用在日志方面。")]),s._v(" "),a("h2",{attrs:{id:"三、logstash-的原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、logstash-的原理"}},[s._v("#")]),s._v(" 三、Logstash 的原理")]),s._v(" "),a("h3",{attrs:{id:"_3-1-从-logstash-自带的配置说起"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-从-logstash-自带的配置说起"}},[s._v("#")]),s._v(" 3.1 从 Logstash 自带的配置说起")]),s._v(" "),a("p",[s._v("Logstash 的原理其实还比较简单，一个输入，一个输出，中间有个管道(不是必须的)，这个管道用来收集、解析和转换日志的。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("输入input---管道filter---输出output\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Logstash 运行时，会读取 Logstash 的配置文件，配置文件可以配置输入源、输出源、以及如何解析和转换的。")]),s._v(" "),a("p",[s._v("Logstash 配置项中有两个必需元素，输入(inputs)和输出(ouputs)，以及一个可选元素 filters 过滤器插件。input 可以配置来源数据，过滤器插件在你指定时修改数据，output 将数据写入目标。")]),s._v(" "),a("p",[s._v("是不是很简单，一个 input 和 一个 output 就搞定了")]),s._v(" "),a("p",[s._v("但是这种配置其实意义不大，没有对日志进行解析，传到 ES 中的数据是原始数据，也就是一个 message 字段包含一整条日志信息，不便于根据字段搜索。")]),s._v(" "),a("h3",{attrs:{id:"_3-2-input-插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-input-插件"}},[s._v("#")]),s._v(" 3.2 Input 插件")]),s._v(" "),a("p",[s._v("配置文件中 input 输入源指定了 beats，而 beats 是一个大家族，Filebeat 只是其中之一。对应的端口 port = 5044，表示 beats 插件可以往 5044 端口发送日志，logstash 可以接收到通过这个端口和 beats 插件通信。")]),s._v(" "),a("p",[s._v("在部署架构图中，input 输入源是 Filebeat，它专门监控日志的变化，然后将日志传给 Logstash。在早期，Logstash 是自己来采集的日志文件的。所以早期的日志检索方案才叫做 ELK，Elasticsearch + Logstash + Kibana，而现在加入了 Filebeat 后，这套日志检索方案属于 ELK Stack，不是 ELKF，摒弃了用首字母缩写来命名。")]),s._v(" "),a("p",[s._v("另外 input 其实有很多组件可以作为输入源，不限于 Filebeat，比如我们可以用 Kafka 作为输入源，将消息传给 Logstash。具体有哪些插件列表，可以参考这个 input 插件列表[1]")]),s._v(" "),a("h3",{attrs:{id:"_3-3-filter-插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-filter-插件"}},[s._v("#")]),s._v(" 3.3 Filter 插件")]),s._v(" "),a("p",[s._v("而对于 Logstash 的 Filter，这个才是 Logstash 最强大的地方。Filter 插件也非常多，我们常用到的 grok、date、mutate、mutiline 四个插件。")]),s._v(" "),a("p",[s._v("对于 filter 的各个插件执行流程，可以看下面这张图：")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://pic.zzppjj.top/LightPicture/2023/04/412a7935d769f280.png",alt:""}})]),s._v(" "),a("h4",{attrs:{id:"_3-3-1-日志示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-1-日志示例"}},[s._v("#")]),s._v(" 3.3.1 日志示例")]),s._v(" "),a("p",[s._v("我以我们后端服务打印的日志为例，看是如何用 filter 插件来解析和转换日志的。")]),s._v(" "),a("p",[s._v("logback.xml 配置的日志格式如下：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("encoder"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("pattern"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("%d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("yyyy-MM-dd HH:mm:ss.SSS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("%thread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" %-5level %logger - %msg%n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/pattern"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/encoder"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("日志格式解释如下：")]),s._v(" "),a("ul",[a("li",[s._v("记录日志时间：%d{yyyy-MM-dd HH:mm:ss.SSS}；")]),s._v(" "),a("li",[s._v("记录是哪个线程打印的日志：[%thread]；")]),s._v(" "),a("li",[s._v("记录日志等级：%-5level；")]),s._v(" "),a("li",[s._v("打印日志的类：%logger；")]),s._v(" "),a("li",[s._v('记录具体日志信息：%msg%n，这个 msg 的内容就是 log.info("abc") 中的 abc。')])]),s._v(" "),a("p",[s._v('通过执行代码 log.info("xxx") 后，就会在本地的日志文件中追加一条日志。')]),s._v(" "),a("h4",{attrs:{id:"_3-3-2-打印的日志内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-2-打印的日志内容"}},[s._v("#")]),s._v(" 3.3.2 打印的日志内容")]),s._v(" "),a("p",[s._v("从服务器拷贝出了一条日志，看下长什么样，有部分敏感信息我已经去掉了。")]),s._v(" "),a("p",[s._v("方法名为：MemberController-,请求参数：{省略}")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2022")]),s._v("-06-16 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(":50:00.070 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("XNIO-1 task-1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" INFO  com.passjava.config - 方法名为:MemberController-,请求参数:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("省略"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("那么 Logstash 如何针对上面的信息解析出对应的字段呢?比如如何解析出打印日志的时间、日志等级、日志信息?")]),s._v(" "),a("h4",{attrs:{id:"_3-3-3-grok-插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-3-grok-插件"}},[s._v("#")]),s._v(" 3.3.3 grok 插件")]),s._v(" "),a("p",[s._v("这里就要用到 logstash 的 filter 中的 grok 插件。filebeat 发送给 logstash 的日志内容会放到message 字段里面，logstash 匹配这个 message 字段就可以了。配置项如下所示：")]),s._v(" "),a("div",{staticClass:"language-yml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[s._v("filter "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n grok "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      match ="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"message"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(?<logTime>\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3})\\s+\\[(?<thread>.*)\\]\\s+(?<level>\\w*)\\s{1,2}+(?<class>\\S*)\\s+-\\s+(?<content>.*)\\s*"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("坑：日志记录的格式复杂，正则表达式非常磨人。")]),s._v(" "),a("p",[s._v("大家发现没，上面的 匹配 message 的正则表达式还是挺复杂的，这个是我一点一点试出来的。Kibana 自带 grok 的正则匹配的工具，路径如下：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("http://"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("your kibana IP"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":5601/app/kibana"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#/dev_tools/grokdebugger")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("我们把日志和正则表达式分别粘贴到上面的输入框，点击 Simulate 就可以测试是否能正确匹配和解析出日志字段。如下图所示：")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://pic.zzppjj.top/LightPicture/2023/04/d56ae96c39a5b827.jpg",alt:"d56ae96c39a5b827.jpg"}})]),s._v(" "),a("p",[s._v("有没有常用的正则表达式呢?有的，logstash 官方也给了一些常用的常量来表达那些正则表达式，可以到这个 Github 地址查看有哪些常用的常量。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("https://github.com/logstash-plugins/logstash-patterns-core/blob/main/patterns/ecs-v1/grok-patterns\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("比如可以用 IP 常量来代替正则表达式 IP (?:%{IPV6}|%{IPV4})。")]),s._v(" "),a("p",[s._v("好了，经过正则表达式的匹配之后，grok 插件会将日志解析成多个字段，然后将多个字段存到了 ES 中，这样我们可以在 ES 通过字段来搜索，也可以在 kibana 的 Discover 界面添加列表展示的字段。")]),s._v(" "),a("p",[s._v("坑：我们后端项目的不同服务打印了两种不同格式的日志，那这种如何匹配?")]),s._v(" "),a("p",[s._v("再加一个 match 就可以了。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("filter "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n grok "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      match "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"message"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(?<logTime>\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3})\\s+\\[(?<thread>.*)\\]\\s+(?<level>\\w*)\\s{1,2}+(?<class>\\S*)\\s+-\\s+(?<content>.*)\\s*"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      match "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"message"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(?<logTime>\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3})\\s{1,2}+(?<level>\\w*)\\s{1,2}+.\\s---+\\s\\[(?<thread>.*)\\]+\\s(?<class>\\S*)\\s*:+\\s(?<content>.*)\\s*"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("当任意一个 message 匹配上了这个正则，则 grok 执行完毕。假如还有第三种格式的 message，那么虽然 grok 没有匹配上，但是 message 也会输出到 ES，只是这条日志在 ES 中不会展示 logTime、level 等字段。")]),s._v(" "),a("h4",{attrs:{id:"_3-3-4-multiline-插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-4-multiline-插件"}},[s._v("#")]),s._v(" 3.3.4 multiline 插件")]),s._v(" "),a("p",[s._v("还有一个坑的地方是错误日志一般都是很多行的，会把堆栈信息打印出来，当经过 logstash 解析后，每一行都会当做一条记录存放到 ES，那这种情况肯定是需要处理的。这里就需要使用 multiline 插件，对属于同一个条日志的记录进行拼接。")]),s._v(" "),a("p",[a("strong",[s._v("3.3.4.1 安装 multiline 插件")])]),s._v(" "),a("p",[s._v("multiline 不是 logstash 自带的，需要单独进行安装。我们的环境是没有外网的，所以需要进行离线安装。")]),s._v(" "),a("p",[s._v("介绍在线和离线安装 multiline 的方式：")]),s._v(" "),a("ul",[a("li",[s._v("在线安装插件。")])]),s._v(" "),a("p",[s._v("在 logstash 根目录执行以下命令进行安装。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("bin/logstash-plugin "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" logstash-filter-multiline\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("离线安装插件。")])]),s._v(" "),a("p",[s._v("在有网的机器上在线安装插件，然后打包。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("bin/logstash-plugin "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" logstash-filter-multiline\nbin/logstash-plugin prepare-offline-pack logstash-filter-multiline\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("拷贝到服务器，执行安装命令。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("bin/logstash-plugin "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" file:///home/software/logstash-offline-plugins-7.6.2.zip\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("安装插件需要等待 5 分钟左右的时间，控制台界面会被 hang 住，当出现 Install successful 表示安装成功。")]),s._v(" "),a("p",[s._v("检查下插件是否安装成功，可以执行以下命令查看插件列表。当出现 multiline 插件时则表示安装成功。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("bin/logstash-plugin list\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("3.3.4.2 使用 multiline 插件")])]),s._v(" "),a("p",[s._v("如果要对同一条日志的多行进行合并，你的思路是怎么样的?比如下面这两条异常日志，如何把文件中的 8 行日志合并成两条日志?")]),s._v(" "),a("p",[s._v("思路是这样的：")]),s._v(" "),a("ul",[a("li",[s._v("第一步：每一条日志的第一行开头都是一个时间，可以用时间的正则表达式匹配到第一行。")]),s._v(" "),a("li",[s._v("第二步：然后将后面每一行的日志与第一行合并。")]),s._v(" "),a("li",[s._v("第三步：当遇到某一行的开头是可以匹配正则表达式的时间的，就停止第一条日志的合并，开始合并第二条日志。")]),s._v(" "),a("li",[s._v("第四步：重复第二步和第三步。")])]),s._v(" "),a("p",[s._v("按照这个思路，multiline 的配置如下：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("filter "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  multiline "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    pattern "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^\\d{4}-\\d{1,2}-\\d{1,2}\\s\\d{1,2}:\\d{1,2}:\\d{1,2}.\\d{3}"')]),s._v("\n    negate "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n    what "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"previous"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("时间的正则表达式就是这个 pattern 字段，大家可以根据自己项目中的日志的时间来定义正则表达式。")]),s._v(" "),a("ul",[a("li",[s._v("pattern: 这个是用来匹配文本的表达式，也可以是grok表达式。")]),s._v(" "),a("li",[s._v("what: 如果pattern匹配成功的话，那么匹配行是归属于上一个事件，还是归属于下一个事件。")])]),s._v(" "),a("p",[s._v("previous: 归属于上一个事件，向上合并。")]),s._v(" "),a("p",[s._v("next: 归属于下一个事件，向下合并。")]),s._v(" "),a("ul",[a("li",[s._v("negate:是否对 pattern 的结果取反。")])]),s._v(" "),a("p",[s._v("false: 不取反，是默认值。。")]),s._v(" "),a("p",[s._v("true: 取反。将多行事件扫描过程中的行匹配逻辑取反(如果pattern匹配失败，则认为当前行是多行事件的组成部分)。")]),s._v(" "),a("p",[s._v("参考 multiline 官方文档[2]")]),s._v(" "),a("h4",{attrs:{id:"_3-3-5-多行被拆分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-5-多行被拆分"}},[s._v("#")]),s._v(" 3.3.5 多行被拆分")]),s._v(" "),a("p",[s._v("坑：Java 堆栈日志太长了，有 100 多行，被拆分了两部分，一部分被合并到了原来的那一条日志中，另外一部分被合并到了不相关的日志中。")]),s._v(" "),a("p",[s._v("如下图所示，第二条日志有 100 多行，其中最后一行被错误地合并到了第三条日志中。")]),s._v(" "),a("p",[s._v("为了解决这个问题，我是通过配置 filebeat 的 multiline 插件来截断日志的。为什么不用 logstash 的 multiline 插件呢?因为在 filter 中使用 multiline 没有截断的配置项。filebeat 的 multiline 配置项如下：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("multiline.type: pattern\nmultiline.pattern: "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^\\d{4}-\\d{1,2}-\\d{1,2}\\s\\d{1,2}:\\d{1,2}:\\d{1,2}.\\d{3}'")]),s._v("\nmultiline.negate: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\nmultiline.match: after\nmultiline.max_lines: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("配置项说明：")]),s._v(" "),a("ul",[a("li",[s._v("multiline.pattern：希望匹配到的结果(正则表达式)。")]),s._v(" "),a("li",[s._v("multiline.negate：值为 true 或 false。使用 false 代表匹配到的行合并到上一行;使用 true 代表不匹配的行合并到上一行。")]),s._v(" "),a("li",[s._v("multiline.match：值为 after 或 before。after 代表合并到上一行的末尾;before 代表合并到下一行的开头。")]),s._v(" "),a("li",[s._v("multiline.max_lines：合并的最大行数，默认 500。")]),s._v(" "),a("li",[s._v("multiline.timeout：一次合并事件的超时时间，默认为 5s，防止合并消耗太多时间导致 filebeat 进程卡死。")])]),s._v(" "),a("p",[s._v("我们重点关注 max_lines 属性，表示最多保留多少行后执行截断，这里配置 50 行。")]),s._v(" "),a("p",[s._v("注意：filebeat 和 logstash 我都配置了 multiline，没有验证过只配置 filebeat 的情况。参考 Filebeat 官方文档[3]")]),s._v(" "),a("h4",{attrs:{id:"_3-3-6-mutate-插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-6-mutate-插件"}},[s._v("#")]),s._v(" 3.3.6 mutate 插件")]),s._v(" "),a("p",[s._v("当我们将日志解析出来后，Logstash 自身会传一些不相关的字段到 ES 中，这些字段对我们排查线上问题帮助不大。可以直接剔除掉。")]),s._v(" "),a("p",[s._v("坑：输出到 ES 的日志包含很多无意义字段。")]),s._v(" "),a("p",[s._v("这里我们就要用到 mutate 插件了。它可以对字段进行转换，剔除等。")]),s._v(" "),a("p",[s._v("比如我的配置是这样的，对很多字段进行了剔除。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("mutate "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    remove_field "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"agent"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"message"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@version"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tags"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ecs"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"input"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[log][offset]"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("注意：一定要把 log.offset 字段去掉，这个字段可能会包含很多无意义内容。")]),s._v(" "),a("p",[s._v("关于 Mutate 过滤器它有很多配置项可供选择，如下表格所示：")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://pic.zzppjj.top/LightPicture/2023/04/f617ce883dde0d3b.jpg",alt:"f617ce883dde0d3b.jpg"}})]),s._v(" "),a("p",[s._v("参考 Mutate 参考文章[4]")]),s._v(" "),a("h4",{attrs:{id:"_3-3-7-date-插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-7-date-插件"}},[s._v("#")]),s._v(" 3.3.7 date 插件")]),s._v(" "),a("p",[s._v("到 kibana 查询日志时，发现排序和过滤字段 @timestamp 是 ES 插入日志的时间，而不是打印日志的时间。")]),s._v(" "),a("p",[s._v("这里我们就要用到 date 插件了。")]),s._v(" "),a("p",[s._v("上面的 grok 插件已经成功解析出了打印日志的时间，赋值到了 logTime 变量中，现在用 date 插件将 logTime 匹配下，如果能匹配，则会赋值到 @timestamp 字段，写入到 ES 中的 @timestamp 字段就会和日志时间一致了。配置如下所示：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    match "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"logTime"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"MMM d HH:mm:ss"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"MMM dd HH:mm:ss"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ISO8601"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("我们到 ES 中查询记录后，发现 @timestamp 字段时间多了一个字母 Z，代表 UTC 时间，也就是说 ES 中存的时间比日志记录的时间晚 8 个小时。")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://pic.zzppjj.top/LightPicture/2023/04/16272638cfeab77e.png",alt:"16272638cfeab77e.png"}})]),s._v(" "),a("p",[s._v('我们可以通过增加配置 timezone => "Asia/Shanghai" 来解决这个问题。修改后的配置如下所示：')]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[s._v("date "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    match ="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"logTime"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"MMM d HH:mm:ss"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"MMM dd HH:mm:ss"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ISO8601"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    timezone ="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(' "Asia/Shanghai"\n  '),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("调整后，再加一条日志后查看结果，Kibana 显示 @timestamp 字段和日志的记录时间一致了。")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://pic.zzppjj.top/LightPicture/2023/04/3e0452ca3b1beded.png",alt:"3e0452ca3b1beded.png"}})]),s._v(" "),a("h3",{attrs:{id:"_3-4-output-插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-output-插件"}},[s._v("#")]),s._v(" 3.4 Output 插件")]),s._v(" "),a("p",[s._v("Logstash 解析和转换后的日志最后输出到了 Elasticsearch 中，由于我们 ES 是集群部署的，所以需要配置多个 ES 节点地址。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("output "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  stdout "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  elasticsearch "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    hosts "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10.2.1.64:9200"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10.2.1.65:9200"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10.27.2.1:9200"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    index "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"qa_log"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("注意这里的 index 名称 qa_log 必须是小写，不然写入 es 时会报错。")]),s._v(" "),a("h3",{attrs:{id:"_3-5-完整配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-完整配置"}},[s._v("#")]),s._v(" 3.5 完整配置")]),s._v(" "),a("p",[s._v("logstah 配置文件内容如下：")]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[s._v("input "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  beats "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    port ="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" 9900\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nfilter "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n  multiline "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    pattern ="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(' "^\\d'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("\\d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("\\d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\\s\\d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\\d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\\d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(".\\d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v('"\n    negate ='),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" true\n    what ="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(' "previous"\n  '),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  grok "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      match ="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"message"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(?<logTime>\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3})\\s+\\[(?<thread>.*)\\]\\s+(?<level>\\w*)\\s{1,2}+(?<class>\\S*)\\s+-\\s+(?<content>.*)\\s*"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      match ="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"message"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(?<logTime>\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3})\\s{1,2}+(?<level>\\w*)\\s{1,2}+.\\s---+\\s\\[(?<thread>.*)\\]+\\s(?<class>\\S*)\\s*:+\\s(?<content>.*)\\s*"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      match ="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n           "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"source"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/home/passjava/logs/(?<logName>\\w+)/.*.log"')]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      overwrite ="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"source"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      break_on_match ="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" false\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  mutate "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    convert ="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v('\n      "bytes" ='),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(' "integer"\n    '),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    remove_field ="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"agent"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"message"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@version"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tags"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ecs"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_score"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"input"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[log][offset]"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  useragent "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    source ="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(' "user_agent"\n    target ='),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(' "useragent"\n  '),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  date "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    match ="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"logTime"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"MMM d HH:mm:ss"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"MMM dd HH:mm:ss"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ISO8601"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    timezone ="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(' "Asia/Shanghai"\n  '),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\noutput "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  stdout "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  elasticsearch "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    hosts ="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10.2.1.64:9200"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10.2.1.65:9200"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10.2.1.66:9200"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    index ="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(' "qa_log"\n  '),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br")])]),a("h2",{attrs:{id:"四、logstash-怎么跑起来的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、logstash-怎么跑起来的"}},[s._v("#")]),s._v(" 四、Logstash 怎么跑起来的")]),s._v(" "),a("h3",{attrs:{id:"_4-1-logstash-如何运行的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-logstash-如何运行的"}},[s._v("#")]),s._v(" 4.1 Logstash 如何运行的")]),s._v(" "),a("p",[s._v("你会好奇 Logstash 是怎么运行起来的吗?")]),s._v(" "),a("p",[s._v("官方提供的启动方式是执行 logstash -f weblog.conf 命令来启动，当执行这个命令的时候其实会调用 Java 命令，以及设置 java 启动参数，然后传入了一个配置文件 weblog.conf 来启动 Logstash。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /home/logstash-7.6.2\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" ./bin/logstash "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" weblog.conf\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("当启动完之后，我们通过命令来看下 Logstash 的运行状态。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-ef")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" logstash\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("执行结果如下图所示，可以看到用到了 Java 命令，设置了 JVM 参数，用到了 Logstash 的JAR 包，传入了参数。")]),s._v(" "),a("p",[s._v("所以建议 Logstash 单独部署到一台服务器上，避免服务器的资源被 Logstash 占用。")]),s._v(" "),a("p",[s._v("Logstash 默认的 JVM 配置是 -Xms1g -Xmx1g，表示分配的最小和最大堆内存大小为 1 G。")]),s._v(" "),a("p",[s._v("那么这个参数是在哪里配置的呢?全局搜索下 Xms1g，找到是在这个文件里面配置的，config\\jvm.options，我们可以修改这里面的 JVM 配置。")]),s._v(" "),a("p",[s._v("我们可以调整 Logstash 的 JVM 启动参数，来优化 Logstash 的性能。")]),s._v(" "),a("p",[s._v("另外 Kibana 上面还可以监控 Logstash 的运行状态(不在本篇讨论范围)。")]),s._v(" "),a("h3",{attrs:{id:"_4-2-logstash-的架构原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-logstash-的架构原理"}},[s._v("#")]),s._v(" 4.2 Logstash 的架构原理")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://pic.zzppjj.top/LightPicture/2023/04/c7e98d16137a8cd4.png",alt:"c7e98d16137a8cd4.png"}})]),s._v(" "),a("p",[s._v("本内容参考这篇 Logstash 架构[5]")]),s._v(" "),a("p",[s._v("Logstash 有多个 input，每个 input 都会有自己的 codec。")]),s._v(" "),a("p",[s._v("数据会先存放到 Queue 中，Logstash 会把 Queue 中的数据分发到不同的 pipeline 中。")]),s._v(" "),a("p",[s._v("然后每一个 pipeline 由 Batcher、filter、output 组成。")]),s._v(" "),a("p",[s._v("Batcher 的作用是批量地从Queue中取数据。Batcher 可以配置为一次取一百个数据。")]),s._v(" "),a("h2",{attrs:{id:"五、logstash-宕机风险"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、logstash-宕机风险"}},[s._v("#")]),s._v(" 五、Logstash 宕机风险")]),s._v(" "),a("h3",{attrs:{id:"_5-1-logstash-单点部署的风险"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-logstash-单点部署的风险"}},[s._v("#")]),s._v(" 5.1 Logstash 单点部署的风险")]),s._v(" "),a("p",[s._v("因为 Logstash 是单点部署到一台服务器上，所以会存在两个风险：")]),s._v(" "),a("ul",[a("li",[s._v("logstash 突然崩了怎么办?")]),s._v(" "),a("li",[s._v("logstash 所在的机器宕机了怎么办?")]),s._v(" "),a("li",[s._v("Logstash 所在的机器重启了怎么办?")])]),s._v(" "),a("p",[s._v("对于第一个问题，可以安装 Keepalived 软件来保证高可用。另外即使没有安装，当手动启动 Logstash 后，Logstash 也能将未及时同步的日志写入到 ES。")]),s._v(" "),a("p",[s._v("对于第二个问题，所在的机器宕机了，那可以通过安装两套 Logstash，通过 keepalived 提供的虚拟 IP 功能，切换流量到另外一个 Logstash。关于如何使用 Keepalived，可以参考之前的 实战 MySQL 高可用架构对于第三个问题，就是把启动 Logstash 的命令放到开机启动脚本中就可以了，但是存在以下问题：")]),s._v(" "),a("ul",[a("li",[s._v("Ubuntu 18.04 版本是没有开机启动文件的")]),s._v(" "),a("li",[s._v("Logstash 无法找到 Java 运行环境")])]),s._v(" "),a("p",[s._v("接下来我们来看下怎么进行配置开机自启动 Logstash。")]),s._v(" "),a("h3",{attrs:{id:"_5-2-开机启动-logstash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-开机启动-logstash"}},[s._v("#")]),s._v(" 5.2 开机启动 Logstash")]),s._v(" "),a("h4",{attrs:{id:"_5-2-1-创建自动启动脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-1-创建自动启动脚本"}},[s._v("#")]),s._v(" 5.2.1 创建自动启动脚本")]),s._v(" "),a("p",[s._v("建立rc-local.service文件；")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /etc/systemd/system/rc-local.service\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("将下列内容复制进 rc-local.service 文件；")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Unit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Description")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/etc/rc.local Compatibility\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ConditionPathExists")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/etc/rc.local\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("forking\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ExecStart")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/etc/rc.local start\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("TimeoutSec")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("StandardOutput")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("tty\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("RemainAfterExit")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("yes\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SysVStartPriority")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("99")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Install"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("WantedBy")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("multi-user.target\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("创建文件 rc.local；")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /etc/rc.local\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("添加启动脚本到启动文件中；")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/sh -e")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动 logstash")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#nohup /home/software/logstash-7.6.2/bin/logstash -f /home/software/logstash-7.6.2/weblog.conf &")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动 filebeat")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" /home/software/filebeat-7.6.2-linux-x86_64/filebeat "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" /home/software/filebeat-7.6.2-linux-x86_64/config.yml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h4",{attrs:{id:"_5-2-2-修改-java-运行环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-2-修改-java-运行环境"}},[s._v("#")]),s._v(" 5.2.2 修改 Java 运行环境")]),s._v(" "),a("p",[s._v("因在开机启动中，logstash 找不到 java 的运行环境，所以需要手动配置下 logstash。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /home/software/logstash-7.6.2/bin/\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" logstash.lib.sh\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("在 setup_java() 方法的第一行加入 JAVA_HOME 变量，JAVA_HOME 的路径需要根据自己的 java 安装目录来。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("JAVA_HOME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/opt/java/jdk1.8.0_181"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"_5-2-3-权限问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-3-权限问题"}},[s._v("#")]),s._v(" 5.2.3 权限问题")]),s._v(" "),a("p",[s._v("给 rc.local 加上权限,启用服务；")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x /etc/rc.local\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" rc-local\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl stop rc-local.service\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl start rc-local.service\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl status rc-local.service\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("然后重启机器，查看 logstash进程是否正在运行，看到一大串 java 运行的命令则表示 logstash 正在运行。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-ef")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" logstash\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"六、总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六、总结"}},[s._v("#")]),s._v(" 六、总结")]),s._v(" "),a("p",[s._v("本篇讲解了 Logstash 在集群环境下的部署架构图、Logstash 遇到的几大坑、以及 Logstash 的运行机制和架构原理。")]),s._v(" "),a("h3",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),a("p",[s._v("[1]input 插件列表: https://www.elastic.co/guide/en/logstash/current/input-plugins.html")]),s._v(" "),a("p",[s._v("[2]multiline 官方文档: https://www.elastic.co/guide/en/logstash/current/plugins-codecs-multiline.html#plugins-codecs-multiline-negate")]),s._v(" "),a("p",[s._v("[3]Filebeat 官方文档: https://www.elastic.co/guide/en/beats/filebeat/current/multiline-examples.html")]),s._v(" "),a("p",[s._v("[4]Mutate 参考文章: https://blog.csdn.net/UbuntuTouch/article/details/106466873")]),s._v(" "),a("p",[s._v("[5]Logstash 架构: https://jenrey.blog.csdn.net/article/details/107122930")]),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("原文链接：https://server.51cto.com/article/710561.html")])])}),[],!1,null,null,null);a.default=e.exports}}]);