(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{456:function(s,a,e){"use strict";e.r(a);var t=e(0),n=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"elk服务部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#elk服务部署"}},[s._v("#")]),s._v(" ELK服务部署")]),s._v(" "),a("h3",{attrs:{id:"官网下载对应版本的二进制压缩包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#官网下载对应版本的二进制压缩包"}},[s._v("#")]),s._v(" 官网下载对应版本的二进制压缩包")]),s._v(" "),a("p",[s._v("elasticsearch 官网下载地址：\nhttps://www.elastic.co/cn/downloads/elasticsearch\nelasticsearch 历史版本下载地址：\nhttps://www.elastic.co/cn/downloads/past-releases#elasticsearch")]),s._v(" "),a("p",[s._v("kinbana 官网下载地址：\nhttps://www.elastic.co/cn/downloads/kibana\nkinbana 历史版本下载地址：\nhttps://www.elastic.co/cn/downloads/past-releases#kibana")]),s._v(" "),a("p",[s._v("logstash 官网下载地址：\nhttps://www.elastic.co/cn/downloads/logstash\nlogstash 历史版本下载地址：\nhttps://www.elastic.co/cn/downloads/past-releases")]),s._v(" "),a("hr"),s._v(" "),a("h3",{attrs:{id:"解压、准备工作、启动elk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解压、准备工作、启动elk"}},[s._v("#")]),s._v(" 解压、准备工作、启动ELK")]),s._v(" "),a("p",[s._v("elasticsearch.tar.gz文件解压")]),s._v(" "),a("p",[s._v("tar -zxvf 就可以啦\n太基础的废话命令就不罗列啦，主要是提几个关键的细节的点\n比如elasticsearch部署的时候需要注意：")]),s._v(" "),a("ol",[a("li",[s._v("使用普通用户")]),s._v(" "),a("li",[s._v("开启max_map_count")]),s._v(" "),a("li",[s._v("设置对应普通用户limit.conf")]),s._v(" "),a("li",[s._v("useradd -d /data/es es &&echo es | passwd --stdin es")]),s._v(" "),a("li",[s._v('echo "vm.max_map_count=655360" >> /etc/sysctl.conf')]),s._v(" "),a("li",[s._v('echo "es soft nofile 655350" >> /etc/security/limits.conf && echo "es hard nofile 655350" >> /etc/security/limits.conf\nsysctl -p 刷新一下另其生效')])]),s._v(" "),a("p",[s._v("然后准备个对应的jdk配置个全局的环境变量：")]),s._v(" "),a("blockquote",[a("p",[s._v("JAVA_HOME=/opt/jdk1.8.0_65\nPATH=$JAVA_HOME/bin:$PATH\nCLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\n追加至系统环境变量文件尾部即可或者普通用户的\n/etc/profile\n.bash_profile\n.bashrc\n然后给刷新一下环境变量或者exit退出用户重新登录即可刷新\n登录普通用户记得带上杠表示带着普通用户的环境变量呢 su - es\nsource /etc/profile\n当我使用elasticsearch-no-jdk-7.9.6.tar.gz版本包时,启动提示要找本地普通用户家目录下面的java\n例如上面的es用户 elastic为解压包\n/data/es/elastic/jdk/bin/java\n配置了全局的环境变量 指定目录的opt jdk java都不行还要去找上面目录的java\n此时我们可以懒得理他直接根据启动log错误信息解决即可啦\n使用“小大招”直接软连接射过去就好啦\n当然前提对应的elastic解压包目录要创建对应的log提示的路劲目录 不然软连接找不到上一层目录无法创建哒\nmkdir -p /data/es/elastic/jdk/bin/\nln -sf /opt/jdk/java/bin/java /data/es/elastic/jdk/bin/")])]),s._v(" "),a("p",[s._v("然后配置改吧改吧修改修改elasticsearch.yml文件")]),s._v(" "),a("blockquote",[a("p",[s._v('cat elasticsearch/config/elasticsearch.yml\ncluster.name: pengge\n#bootstrap.mlockall: true\nthread_pool.search.size: 10\nthread_pool.search.queue_size: 3000\nthread_pool.bulk.size: 5\nthread_pool.bulk.queue_size: 2000\nthread_pool.index.size: 5\nthread_pool.index.queue_size: 1500\nnode.name: node-pengge\ncluster.initial_master_nodes: ["node-pengge"]\npath.data: /data/es/elastic/data\npath.logs: /data/elastic/logs\nnetwork.host: 192.168.108.8\nhttp.port: 9200\ntransport.tcp.port: 9300\ntransport.tcp.compress: false\ndiscovery.zen.ping.unicast.hosts: ["192.168.108.8", "192.168.108.9", "192.168.108.10"]')])]),s._v(" "),a("p",[s._v("然后就可以启动es节点啦，上面实例yml配置文件是配置的三节点集群，多节点集群也是一样的道理逗号添加集群节点ip即可啦，简简单单部署那是十分的轻松啦\n./elasticsearch &> esstart.log & && tail -f esstart.log\n直接sh或者./启动二进制脚本&>将屏幕标准正确错误输出输出至本地目录的esstart.log命名的启动日志文件内，同时使用tail -f 观察es服务启动情况即可")]),s._v(" "),a("p",[s._v("下面附上一些基础的es查询语句：\n命令行get方式查询，pengge为示例索引名称")]),s._v(" "),a("blockquote",[a("p",[s._v("curl 192.168.108.8:9200/_cat/indices\ncurl 192.168.108.8:9200/_cat/health\ncurl 192.168.108.8:9200/_cat/nodes\ncurl 192.168.108.8:9200/_cat/shards\ncurl 192.168.108.8:9200/_cat/allocation\ncurl 192.168.108.8:9200/pengge/_count\ncurl 192.168.108.8:9200/pengge/_search\nkibana页面方式查询：\nGET _cat/indices\nGET _cat/health\nGET _cat/nodes\nGET _cat/shards\nGET _cat/allocation\nGET /pengge/_count\nGET /pengge/_search")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v('删除索引\nDELETE pengge*\n删除索引内的指定字段，一定注意删除字段是这个动作参数哦：_update_by_query\n删除字段：@timestamp\nPOST /pengge/_update_by_query\n{\n "script": {\n "inline": "ctx._source.remove(\'@timestamp\')",\n "lang": "painless"\n },\n "query": {\n "bool": {\n "must": [\n {\n "exists": {\n "field": "@timestamp"\n }\n }\n ]\n }\n }\n}\n')])])]),a("p",[s._v("***至此elasticsearch服务就简简单单的启动成功啦 ***")]),s._v(" "),a("p",[s._v("至于kibana、logstash一样的道理简单解压./启动即可啦\n不在废话叙述啦\n简单配置个es 9200读取的节点就可以了如下：")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v('[root@zabbix config]# egrep -v "#|^$" kibana.yml\nserver.port: 5601\nserver.host: "192.168.108.143"\nelasticsearch.hosts: ["http://192.168.108.9:9200"]\n\n./kibana &> start.log & && tail -f start.log\n')])])]),a("p",[s._v("logstash的话主要就是为了针对log日志文件或者txt csv等源数据文件进行整理汇总切割推送给es从而在kibana展示，细节东西下篇文章进行讲解，本期内容就简简单单写写部署启动完事啦\nlogstash配置的job conf文件可以使用-t参数简单配置的字段语法是否正确如下：")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("[root@zabbix bin]# ./logstash -f job/csv-es-debug.conf -t\nSending Logstash logs to /data/kinbana/logstash7.8.1/logstash-7.8.1/logs which is now configured via log4j2.properties\n[2021-03-09T15:24:03,282][WARN ][logstash.config.source.multilocal] Ignoring the 'pipelines.yml' file because modules or command line options are specified\n[2021-03-09T15:24:05,485][INFO ][org.reflections.Reflections] Reflections took 46 ms to scan 1 urls, producing 21 keys and 41 values\nConfiguration OK\n[2021-03-09T15:24:06,291][INFO ][logstash.runner ] Using config.test_and_exit mode. Config Validation Result: OK. Exiting Logstash\n")])])]),a("p",[a("em",[a("strong",[s._v("完事就可以-f指定 & 放入后台进行运行使用可爱的logstash啦~")])])]),s._v(" "),a("hr")])}),[],!1,null,null,null);a.default=n.exports}}]);